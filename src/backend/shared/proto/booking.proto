// Protocol Buffers v3 schema for booking-related data and operations
// Addresses requirement: Technical Specification/1.3 Scope/Core Features/Booking System
// Handles real-time availability search, booking management, and schedule coordination.

syntax = "proto3";

package booking;

option go_package = "backend/shared/proto/booking";

import "google/protobuf/timestamp.proto";

// Represents a booking entity with all associated data
// Addresses requirement: Technical Specification/8.2 Database Design/Schema Design
message Booking {
    string id = 1;
    string owner_id = 2;
    string walker_id = 3;
    string dog_id = 4;
    google.protobuf.Timestamp scheduled_at = 5;
    BookingStatus status = 6;
    double amount = 7;
    Location location = 8;
    User owner = 9;
    User walker = 10;
    Payment payment = 11;
}

// Represents a geographical location with address details
// Addresses requirement: Technical Specification/7.2.1 Core Components/Tracking Service
message Location {
    double latitude = 1;
    double longitude = 2;
    string address = 3;
    string city = 4;
    string state = 5;
    string country = 6;
    string postal_code = 7;
}

// Represents a user in the system (can be either owner or walker)
// Addresses requirement: Technical Specification/8.2 Database Design/8.2.1 Schema Design
message User {
    string id = 1;
    string email = 2;
    string first_name = 3;
    string last_name = 4;
    UserType user_type = 5;
}

// Represents payment information for a booking
// Addresses requirement: Technical Specification/1.3 Scope/Core Features/Payments
message Payment {
    string id = 1;
    double amount = 2;
    string currency = 3;
    PaymentStatus status = 4;
    google.protobuf.Timestamp created_at = 5;
}

// Enum for booking status
enum BookingStatus {
    BOOKING_STATUS_UNSPECIFIED = 0;
    BOOKING_STATUS_PENDING = 1;
    BOOKING_STATUS_CONFIRMED = 2;
    BOOKING_STATUS_IN_PROGRESS = 3;
    BOOKING_STATUS_COMPLETED = 4;
    BOOKING_STATUS_CANCELLED = 5;
}

// Enum for payment status
enum PaymentStatus {
    PAYMENT_STATUS_UNSPECIFIED = 0;
    PAYMENT_STATUS_PENDING = 1;
    PAYMENT_STATUS_PROCESSING = 2;
    PAYMENT_STATUS_COMPLETED = 3;
    PAYMENT_STATUS_FAILED = 4;
    PAYMENT_STATUS_REFUNDED = 5;
}

// Enum for user type
enum UserType {
    USER_TYPE_UNSPECIFIED = 0;
    USER_TYPE_OWNER = 1;
    USER_TYPE_WALKER = 2;
}

// Service definition for booking operations
service BookingService {
    // Create a new booking
    rpc CreateBooking(CreateBookingRequest) returns (Booking);
    
    // Update an existing booking
    rpc UpdateBooking(UpdateBookingRequest) returns (Booking);
    
    // Get booking by ID
    rpc GetBooking(GetBookingRequest) returns (Booking);
    
    // List bookings with filters
    rpc ListBookings(ListBookingsRequest) returns (ListBookingsResponse);
    
    // Cancel a booking
    rpc CancelBooking(CancelBookingRequest) returns (Booking);
}

message CreateBookingRequest {
    string owner_id = 1;
    string walker_id = 2;
    string dog_id = 3;
    google.protobuf.Timestamp scheduled_at = 4;
    Location location = 5;
}

message UpdateBookingRequest {
    string booking_id = 1;
    BookingStatus status = 2;
    Location location = 3;
}

message GetBookingRequest {
    string booking_id = 1;
}

message ListBookingsRequest {
    string user_id = 1;
    UserType user_type = 2;
    BookingStatus status = 3;
    google.protobuf.Timestamp start_date = 4;
    google.protobuf.Timestamp end_date = 5;
    int32 page_size = 6;
    string page_token = 7;
}

message ListBookingsResponse {
    repeated Booking bookings = 1;
    string next_page_token = 2;
    int32 total_count = 3;
}

message CancelBookingRequest {
    string booking_id = 1;
    string cancellation_reason = 2;
}