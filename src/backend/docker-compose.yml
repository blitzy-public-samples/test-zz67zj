# Docker Compose configuration for orchestrating backend services
# Addresses requirement: Backend Service Orchestration (7.4.2 Deployment Architecture)
# Facilitates the orchestration of backend services for both development and production environments

version: "3.8"

# Import environment-specific configurations
x-compose-imports:
  - docker-compose.dev.yml
  - docker-compose.prod.yml

# Common configuration for all services
x-common-config: &common-config
  restart: unless-stopped
  networks:
    - ${NETWORK_NAME:-dogwalker_network}

# Common healthcheck configuration
x-healthcheck: &healthcheck-config
  interval: 30s
  timeout: 3s
  retries: 3
  start_period: 5s

services:
  # API Gateway Service
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
      target: ${NODE_ENV:-development}
    container_name: ${COMPOSE_PROJECT_NAME:-dogwalker}_api_gateway
    ports:
      - "${API_GATEWAY_PORT:-8080}:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=3000
      - AUTH_SERVICE_URL=http://auth-service:3000
      - BOOKING_SERVICE_URL=http://booking-service:8081
      - NOTIFICATION_SERVICE_URL=http://notification-service:8082
      - PAYMENT_SERVICE_URL=http://payment-service:8083
      - TRACKING_SERVICE_URL=http://tracking-service:8084
    <<: *common-config
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      <<: *healthcheck-config

  # Authentication Service
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME:-dogwalker}_auth_service
    expose:
      - "${AUTH_SERVICE_PORT:-3000}"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=3000
    <<: *common-config
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      <<: *healthcheck-config

  # Booking Service
  booking-service:
    build:
      context: ./booking-service
      dockerfile: Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME:-dogwalker}_booking_service
    expose:
      - "${BOOKING_SERVICE_PORT:-8081}"
    environment:
      - BOOKING_SERVICE_PORT=8081
      - GO_ENV=${NODE_ENV:-development}
    <<: *common-config
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/health"]
      <<: *healthcheck-config

  # Notification Service
  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME:-dogwalker}_notification_service
    expose:
      - "${NOTIFICATION_SERVICE_PORT:-8082}"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - NOTIFICATION_SERVICE_PORT=8082
    <<: *common-config
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8082/health"]
      <<: *healthcheck-config

  # Payment Service
  payment-service:
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME:-dogwalker}_payment_service
    expose:
      - "${PAYMENT_SERVICE_PORT:-8083}"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=8083
    <<: *common-config
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8083/health"]
      <<: *healthcheck-config

  # Tracking Service
  tracking-service:
    build:
      context: ./tracking-service
      dockerfile: Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME:-dogwalker}_tracking_service
    expose:
      - "${TRACKING_SERVICE_PORT:-8084}"
    environment:
      - GO_ENV=${NODE_ENV:-development}
      - TRACKING_WS_PORT=8084
    <<: *common-config
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8084/health"]
      <<: *healthcheck-config

# Define shared network
networks:
  dogwalker_network:
    name: ${NETWORK_NAME:-dogwalker_network}
    driver: bridge