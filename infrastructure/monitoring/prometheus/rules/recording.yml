# Human Tasks:
# 1. Review and validate the recording rules match the application's query patterns
# 2. Ensure sufficient storage capacity for precomputed time series
# 3. Monitor performance impact of recording rules and adjust intervals if needed
# 4. Verify metrics retention policies align with business requirements

# Requirement: Monitoring and Observability (Technical Specification/7.4 Cross-Cutting Concerns/7.4.1 Monitoring and Observability)
# Provides recording rules to precompute metrics for efficient querying and monitoring

groups:
  # API Service Performance Metrics
  - name: api_service_metrics
    interval: 15s  # Matches global evaluation_interval
    rules:
      - record: api:request_duration_seconds:p95_5m
        expr: histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket{job="api-services"}[5m])) by (le, service))
        labels:
          metric_type: latency
      
      - record: api:request_rate:5m
        expr: sum(rate(http_requests_total{job="api-services"}[5m])) by (service, status_code)
        labels:
          metric_type: throughput

      - record: api:error_rate:5m
        expr: sum(rate(http_requests_total{job="api-services", status_code=~"5.."}[5m])) by (service) / sum(rate(http_requests_total{job="api-services"}[5m])) by (service)
        labels:
          metric_type: reliability

  # Resource Utilization Metrics
  - name: resource_utilization
    interval: 15s
    rules:
      - record: node:cpu_utilization:avg_5m
        expr: 100 - (avg by (instance) (rate(node_cpu_seconds_total{mode="idle"}[5m])) * 100)
        labels:
          metric_type: resource

      - record: node:memory_utilization:avg_5m
        expr: 100 * (1 - node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)
        labels:
          metric_type: resource

      - record: node:disk_utilization:avg_5m
        expr: 100 * (1 - node_filesystem_avail_bytes{mountpoint="/"} / node_filesystem_size_bytes{mountpoint="/"})
        labels:
          metric_type: resource

  # Database Performance Metrics
  - name: database_metrics
    interval: 15s
    rules:
      - record: db:postgresql_active_connections:sum
        expr: sum(pg_stat_activity_count{state="active"}) by (datname)
        labels:
          metric_type: connection

      - record: db:postgresql_transaction_rate:5m
        expr: rate(pg_stat_database_xact_commit[5m]) + rate(pg_stat_database_xact_rollback[5m])
        labels:
          metric_type: throughput

      - record: db:postgresql_query_duration:p95_5m
        expr: histogram_quantile(0.95, sum(rate(pg_query_duration_seconds_bucket[5m])) by (le, datname))
        labels:
          metric_type: latency

  # Cache Performance Metrics
  - name: cache_metrics
    interval: 15s
    rules:
      - record: cache:redis_memory_usage:ratio
        expr: redis_memory_used_bytes / redis_memory_max_bytes
        labels:
          metric_type: resource

      - record: cache:redis_hit_rate:5m
        expr: rate(redis_keyspace_hits_total[5m]) / (rate(redis_keyspace_hits_total[5m]) + rate(redis_keyspace_misses_total[5m]))
        labels:
          metric_type: performance

  # Business Metrics
  - name: business_metrics
    interval: 15s
    rules:
      - record: business:booking_success_rate:5m
        expr: sum(rate(booking_requests_total{status="success"}[5m])) / sum(rate(booking_requests_total[5m]))
        labels:
          metric_type: business

      - record: business:payment_success_rate:5m
        expr: sum(rate(payment_transactions_total{status="success"}[5m])) / sum(rate(payment_transactions_total[5m]))
        labels:
          metric_type: business

      - record: business:active_walks:count
        expr: sum(dog_walks_active)
        labels:
          metric_type: business

  # SLO/SLA Metrics
  - name: slo_metrics
    interval: 15s
    rules:
      - record: slo:availability:ratio_5m
        expr: 1 - (sum(rate(http_requests_total{job="api-services", status_code=~"5.."}[5m])) / sum(rate(http_requests_total{job="api-services"}[5m])))
        labels:
          metric_type: slo

      - record: slo:latency_compliance:ratio_5m
        expr: sum(rate(http_request_duration_seconds_count{job="api-services", le="0.5"}[5m])) / sum(rate(http_request_duration_seconds_count{job="api-services"}[5m]))
        labels:
          metric_type: slo